# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Release Builds

on:
  push:
    branches: [ main ]
#   pull_request:
#     branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:  
        fetch-depth: 0  
    - name: Github Tag with semantic versioning
      uses: hennejg/github-tag-action@v4.2.4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        release_branches: main
    - name: testvar
      run: echo ${newTag}
    - name: testvar2
      run: echo ${{newTag}}

#     - name: Set up JDK 1.8
#       uses: actions/setup-java@v1
#       with:
#         java-version: 1.8
#     - name: Grant execute permission for gradlew
#       run: chmod +x gradlew
#     - name: Build with Gradle
#       run: ./gradlew build
#     - uses: actions/upload-artifact@v2
#       with:
#         name: Package
#         path: build/libs

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${newTag}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false
#     - name: Upload Release Asset
#       id: upload-release-asset 
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#         asset_path: ./my-artifact.zip
#         asset_name: my-artifact.zip
#         asset_content_type: application/zip
